import pygame
import pytest
import sys
import random
import unittest
pygame.init()
WIDTH, HEIGHT = 625, 400
BALL_RADIUS = 15
PADDLE_WIDTH, PADDLE_HEIGHT = 10, 60
FPS = 60
ball_speed = [6, 6]
score = [0, 0]
WHITE = (255, 255, 255)
ball = pygame.Rect(300, 200, 10, 10)
paddle_left = pygame.Rect(20, 200, 10, 60)
paddle_right = pygame.Rect(595, 200, 10, 60)
from unittest.mock import MagicMock, call, patch
from Main import move_ball, move_paddles, reset_ball, draw_objects

def test_move_paddles():

    # Нажатие клавиши для перемещения платформ
    with patch('pygame.key.get_pressed', return_value={pygame.K_w: True}):
        move_paddles()
        assert paddle_left.top == 192  # Проверка перемещения вверх

    with patch('pygame.key.get_pressed', return_value={pygame.K_s: True}):
        move_paddles()
        assert paddle_left.top == 200  # Проверка остановки при достижении нижней границы

    with patch('pygame.key.get_pressed', return_value={pygame.K_UP: True}):
        move_paddles()
        assert paddle_right.top == 192  # Проверка перемещения вверх

    with patch('pygame.key.get_pressed', return_value={pygame.K_DOWN: True}):
        move_paddles()
        assert paddle_right.top == 200  # Проверка остановки при достижении нижней границы

def test_reset_ball():

    reset_ball()
    assert ball.x == 312.5
    assert ball.y == 200

def test_move_ball():

    move_ball(ball, ball_speed)
    assert ball.x == 306
    assert ball.y == 206
    assert ball_speed == [6, 6]

if __name__ == "__main__":
    test_move_paddles()
